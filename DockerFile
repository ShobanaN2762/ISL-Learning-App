# Dockerfile

# STAGE 1: Build the application using Maven
# UPDATED: Using Maven 3.9.11 to match your maven-wrapper.properties
FROM maven:3.9.11-openjdk-17 AS builder

# Set the working directory inside the container
WORKDIR /app

# Copy the Maven project file first to leverage Docker's layer caching
COPY pom.xml .

# Copy the rest of your source code
COPY src ./src

# Run the Maven package command to build the executable JAR
# -DskipTests skips running tests during the build
RUN mvn clean package -DskipTests


# STAGE 2: Create the final, lightweight runtime image
# We use a slim Java Runtime Environment (JRE) which is smaller than a full JDK
FROM openjdk:17-jre-slim

# Set the working directory
WORKDIR /app

# Expose the port your application runs on
EXPOSE 8080

# Copy the final JAR file from the 'builder' stage
# The JAR will be in the 'target' directory. We rename it to app.jar for simplicity.
COPY --from=builder /app/target/*.jar app.jar

# Define the command to run the application
ENTRYPOINT ["java", "-jar", "app.jar"]